// <auto-generated>
//  Purpose: Centralizes Respawn configuration for resetting SQL Server databases between integration tests.
//  What is being validated: Ensures every integration test executes against a pristine schema with no state bleed.
//  Success: Respawn checkpoint successfully resets the database; failure indicates schema drift or locking issues.
// </auto-generated>
using System.Threading.Tasks;
using Respawn;
using Respawn.Graph;

namespace CRMAdapter.Tests.TestUtilities.Helpers;

/// <summary>
/// Helper methods that configure Respawn checkpoints for SQL Server containers.
/// </summary>
public static class RespawnResetHelper
{
    /// <summary>
    /// Creates a Respawn checkpoint using hardened defaults for SQL Server.
    /// </summary>
    /// <param name="connectionString">Database connection string.</param>
    /// <returns>Configured <see cref="Respawner"/>.</returns>
    public static Task<Respawner> CreateCheckpointAsync(string connectionString)
    {
        var options = new RespawnerOptions
        {
            DbAdapter = DbAdapter.SqlServer,
            SchemasToInclude = new[] { "dbo" },
            TablesToIgnore = new Table[]
            {
                new Table("__EFMigrationsHistory")
            }
        };

        return Respawner.CreateAsync(connectionString, options);
    }
}

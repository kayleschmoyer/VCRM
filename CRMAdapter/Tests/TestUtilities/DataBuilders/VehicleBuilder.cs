// <auto-generated>
//  Purpose: Provides deterministic construction helpers for canonical vehicles used in mapping tests.
//  What is being validated: Allows tests to create valid vehicle references/aggregates with predictable identifiers.
//  Success: Tests consuming the builder produce canonical vehicles with stable VINs and relationships; failure indicates data set-up issues.
// </auto-generated>
using System;
using Bogus;
using CRMAdapter.CommonDomain;

namespace CRMAdapter.Tests.TestUtilities.DataBuilders;

/// <summary>
/// Builds canonical <see cref="Vehicle"/> and <see cref="VehicleReference"/> instances for tests.
/// </summary>
public sealed class VehicleBuilder
{
    private static readonly Faker Faker;

    static VehicleBuilder()
    {
        Randomizer.Seed = new Random(1337);
        Faker = new Faker(locale: "en_GB");
    }

    private Guid _id = Guid.NewGuid();
    private Guid _customerId = Guid.NewGuid();
    private string _vin = "VIN00000000000001";
    private string _make = "Tesla";
    private string _model = "Model S";
    private int _modelYear = 2022;
    private int _odometer = 12345;

    public static VehicleBuilder Default() => new();

    public VehicleBuilder WithId(Guid value)
    {
        _id = value;
        return this;
    }

    public VehicleBuilder WithCustomerId(Guid value)
    {
        _customerId = value;
        return this;
    }

    public VehicleBuilder WithVin(string value)
    {
        _vin = value;
        return this;
    }

    public VehicleBuilder WithMake(string value)
    {
        _make = value;
        return this;
    }

    public VehicleBuilder WithModel(string value)
    {
        _model = value;
        return this;
    }

    public VehicleBuilder WithModelYear(int value)
    {
        _modelYear = value;
        return this;
    }

    public VehicleBuilder WithOdometer(int value)
    {
        _odometer = value;
        return this;
    }

    public Vehicle Build()
    {
        return new Vehicle(_id, _vin, _make, _model, _modelYear, _odometer, _customerId);
    }

    public VehicleReference BuildReference()
    {
        return new VehicleReference(_id, _vin);
    }
}
